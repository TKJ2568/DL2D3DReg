# 非生成模式下，需要设定数据路径
data_path = "data/im/标准正位"
is_cuda = 1
is_add_uv_coord = 1 # 是否添加uv坐标将单通道图像转为三通道图像
train_data_ratio = 0.7
val_data_ratio = 0.15

# voxel_path: 体素数据路径
is_load_voxel = 0
voxel_path = "C:\\Users\\adminTKJ\\Desktop\\MainProject\\CT_投影方式研究\\CT_data\\spine107_img_cropped"

# 是否是生成训练数据
generate_train_data = 0

# 生成训练数据的时候，是否使用之前的数据集划分方式
is_use_old_split = 0
split_history_dir = "output/dataset_split_history"
split_history_filename = "default_split.json"

# 是否为单次投影
single_projection = 0
# 光源到像平面的距离
d_s2p = 800
# 图像分辨率
im_sz = [128, 128]
# 如果是单次投影，需要设定投影的位姿
# 体素投影设置
[DRR]
    # ["circular_perspective", "matrix_perspective", "orthogonal"]
    projection_type = "circular_perspective"
    # 初始投影位姿-三个角度的旋转值
    # 标准正位 0 270 90或者0 90 270
    # 标准侧位 0 270 0或者0 90 180
    init_pose = [0, 270, 90]
    # 添加的噪声
    # 平移噪声
    translation_noise = [0, 0, 0]
    # 旋转噪声
    rotation_noise = [0, 0, 0]
    # 是否显示单次投影的结果
    show_single_projection = 1
    # 是否保存单次投影的结果
    save_single_projection = 0
    # 单次投影的保存路径
    single_projection_path = "output"

[DRR_train]
    train_num = 10000
    # 噪声采样模式：
    # "uniform"：均匀分布
    # "normal"：正态分布
    noise_sample_mode = "uniform"
    # 保存路径
    save_path = "data/im/标准侧位"
    # 位置范围初值设定
    # "标准正位"或者"标准侧位"
    standard_pose = "标准侧位"
    [DRR_train.standard_front]
        init_pose = [0, 270, 90]
        # 标准正位下 沿主光轴Y轴的位移是±50，沿其他方向的位移是±25
        translation_noise_range = [25, 50, 25]
        # 标准正位下 绕Y轴的旋转为±10。绕其他轴的旋转为±5
        rotation_noise_range = [5, 10, 5]
    [DRR_train.standard_side]
        init_pose = [0, 270, 0]
        # 标准侧位下 沿主光轴X轴的位移是±50，沿其他方向的位移是±25
        translation_noise_range = [50, 25, 25]
        # 标准侧位下 绕X轴的旋转为±10。绕其他轴的旋转为±5
        rotation_noise_range = [10, 5, 5]
